@page "/"
@layout LoginLayout

<RadzenNotification />

<br/>

<h3 style="text-align:center;">
    Marvel studios
</h3>

<EditForm Model="_usuario" OnValidSubmit="@Loguear">
    <DataAnnotationsValidator />

    <RadzenCard class="rz-my-12 rz-mx-auto rz-p-4 rz-p-md-12" style="max-width: 600px;">
        <div class="form-group row">
            <label class="col-sm-3 col-form-label">Usuario</label>
            <div class="col-sm-6">
                <RadzenTextBox class="form-control" @bind-Value="@_usuario.UserName" />
                <ValidationMessage For="@(() => _usuario.UserName)" />
            </div>
        </div>

        <div class="form-group row">
            <label class="col-sm-3 col-form-label">Contraseña</label>
            <div class="col-sm-6">
                <RadzenPassword class="form-control" @bind-Value="@_usuario.Pass" aria-label="enter password" />
                <ValidationMessage For="@(() => _usuario.Pass)" />
            </div>
        </div>

        <br />

        <div class="form-group">
            <div class="text-center">
                <RadzenButton class="btn btn-primary" ButtonType="ButtonType.Submit" Text="Iniciar Sesión" />
            </div>
        </div>

        <br />

        <div class="form-group text-center">
            <button type="button" class="btn btn-link text-primary" style="text-decoration: none;" @onclick="UsuarioNuevo">
                ¿No tienes cuenta? Regístrate aquí
            </button>
        </div>

    </RadzenCard>
</EditForm>

@code {
    Usuario _usuario = new();

    public async Task Loguear()
    {
        var json = JsonConvert.SerializeObject(_usuario);
        var stringContent = new StringContent(json, UnicodeEncoding.UTF8, "application/json");
        var httpResponse = await _http.PostAsync("Api/Usuario/LoguearUsuario", stringContent);

        if (httpResponse.IsSuccessStatusCode)
        {
            var responseContent = await httpResponse.Content.ReadAsStringAsync();
            var usuario = JsonConvert.DeserializeObject<Usuario>(responseContent);

            if (usuario != null)
            {
                UsuarioDto.UsuarioId = usuario.UsuarioId;
                UsuarioDto.Nombre = usuario.Nombre;
                UsuarioDto.Identificacion = usuario.Identificacion;
                UsuarioDto.Correo = usuario.Correo;
                UsuarioDto.UserName = usuario.UserName;

                NavigationManager.NavigateTo("/Index");                
            }
            else
            {
                ShowNotification(new NotificationMessage
                    {
                        Severity = NotificationSeverity.Warning,
                        Summary = "Marvel studios",
                        Detail = "Usuario o contraseña incorrectos",
                        Duration = 5000
                    });
            }
        }
        else
        {
            ShowNotification(new NotificationMessage
                {
                    Severity = NotificationSeverity.Error,
                    Summary = "Marvel studios",
                    Detail = "Ocurrió un error al intentar iniciar sesión. Por favor, inténtelo de nuevo más tarde.",
                    Duration = 5000
                });
        }
    }

    public async Task UsuarioNuevo()
    {
        navigation.NavigateTo("/NuevoUsuario");
    }

    void ShowNotification(NotificationMessage message)
    {
        NotificationService.Notify(message);
    }
}
